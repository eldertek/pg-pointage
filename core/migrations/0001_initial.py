# Generated by Django 5.1.5 on 2025-01-23 16:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('qr_code_value', models.CharField(max_length=100, unique=True)),
                ('emails_alertes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('gardien', 'Gardien'), ('agent_de_nettoyage', 'Agent de nettoyage'), ('manager', 'Manager')], default='gardien', max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Planning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FIXE', 'Fixe'), ('FREQUENCE', 'Fréquence')], max_length=10)),
                ('jours_passage', models.CharField(blank=True, help_text='Jours de passage séparés par des virgules (ex: lundi,vendredi)', max_length=200, null=True)),
                ('actif', models.BooleanField(default=True, help_text='Indique si le planning est actif')),
                ('date_debut', models.DateField(blank=True, help_text="Date de début d'application du planning", null=True)),
                ('date_fin', models.DateField(blank=True, help_text="Date de fin d'application du planning", null=True)),
                ('heure_debut_matin', models.TimeField(blank=True, null=True, verbose_name="Heure d'arrivée le matin")),
                ('heure_fin_matin', models.TimeField(blank=True, null=True, verbose_name='Heure de départ le midi')),
                ('heure_debut_aprem', models.TimeField(blank=True, null=True, verbose_name="Heure d'arrivée l'après-midi")),
                ('heure_fin_aprem', models.TimeField(blank=True, null=True, verbose_name='Heure de départ le soir')),
                ('marge_retard', models.IntegerField(default=15, verbose_name='Tolérance de retard (en minutes)')),
                ('marge_depart_anticip', models.IntegerField(default=15, verbose_name='Tolérance de départ anticipé (en minutes)')),
                ('duree_prevue_minutes', models.IntegerField(default=0, verbose_name='Durée prévue (en minutes)')),
                ('marge_duree_pct', models.IntegerField(default=10, verbose_name='Tolérance sur la durée totale (en %)')),
                ('marge_pop_up', models.IntegerField(default=30, verbose_name='Marge de la fenêtre interactive (en minutes)')),
                ('users', models.ManyToManyField(blank=True, related_name='plannings', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site')),
            ],
            options={
                'verbose_name': 'Planning',
                'verbose_name_plural': 'Plannings',
            },
        ),
        migrations.CreateModel(
            name='Pointage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_scan', models.DateTimeField()),
                ('arrivee_ou_depart', models.CharField(choices=[('arrivee', 'Arrivée'), ('depart', 'Départ')], default='arrivee', max_length=10)),
                ('retard', models.IntegerField(default=0)),
                ('depart_anticip', models.IntegerField(default=0)),
                ('periode', models.CharField(choices=[('MATIN', 'Matin'), ('APRES_MIDI', 'Après-midi')], default='MATIN', max_length=10)),
                ('ecart_duree_minutes', models.IntegerField(default=0, help_text='Écart en minutes par rapport à la durée prévue (pour planning FREQUENCE)')),
                ('planning', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.planning')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site')),
            ],
        ),
        migrations.CreateModel(
            name='Anomalie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motif', models.CharField(max_length=255)),
                ('date_declaration', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('en_attente', 'En attente'), ('valide', 'Validé'), ('refuse', 'Refusé')], default='en_attente', max_length=20)),
                ('type_anomalie', models.CharField(choices=[('absence_totale', 'Absence totale'), ('presence_partielle', 'Présence partielle'), ('retard', 'Retard'), ('depart_anticipe', 'Départ anticipé'), ('incoherence', 'Incohérence des pointages')], default='absence_totale', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomalies', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anomalies', to='core.site')),
            ],
        ),
        migrations.CreateModel(
            name='StatistiquesTemps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.IntegerField()),
                ('annee', models.IntegerField()),
                ('minutes_manquantes_total', models.IntegerField(default=0, help_text='Total des minutes manquantes sur le mois')),
                ('nb_absences_totales', models.IntegerField(default=0, help_text="Nombre d'absences totales sur le mois")),
                ('nb_presences_partielles', models.IntegerField(default=0, help_text='Nombre de présences partielles sur le mois')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistiques_temps', to='core.site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistiques_temps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Statistique de temps',
                'verbose_name_plural': 'Statistiques de temps',
                'unique_together': {('user', 'site', 'mois', 'annee')},
            },
        ),
    ]
