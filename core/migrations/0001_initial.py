# Generated by Django 5.0.2 on 2025-03-20 21:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Administrateur"),
                            ("manager", "Manager"),
                            ("gardien", "Gardien"),
                            ("agent_de_nettoyage", "Agent de nettoyage"),
                        ],
                        default="gardien",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(related_name="auth_users", to="auth.group"),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="organisation_users",
                        to="auth.group",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Planning",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("gardiennage", "Gardiennage"),
                            ("nettoyage", "Nettoyage"),
                        ],
                        max_length=20,
                    ),
                ),
                ("actif", models.BooleanField(default=True)),
                ("date_debut", models.DateField(blank=True, null=True)),
                ("date_fin", models.DateField(blank=True, null=True)),
                ("lundi", models.BooleanField(default=False)),
                ("mardi", models.BooleanField(default=False)),
                ("mercredi", models.BooleanField(default=False)),
                ("jeudi", models.BooleanField(default=False)),
                ("vendredi", models.BooleanField(default=False)),
                ("samedi", models.BooleanField(default=False)),
                ("dimanche", models.BooleanField(default=False)),
                ("heure_debut_matin", models.TimeField(blank=True, null=True)),
                ("heure_fin_matin", models.TimeField(blank=True, null=True)),
                ("heure_debut_aprem", models.TimeField(blank=True, null=True)),
                ("heure_fin_aprem", models.TimeField(blank=True, null=True)),
                ("marge_retard", models.IntegerField(default=15)),
                ("marge_depart_anticip", models.IntegerField(default=15)),
                ("duree_min", models.IntegerField(default=60)),
                ("frequence", models.IntegerField(default=1)),
                (
                    "marge_duree_pct",
                    models.IntegerField(
                        default=10,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organisation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("qr_code_value", models.CharField(max_length=100, unique=True)),
                ("emails_alertes", models.TextField(blank=True)),
                ("adresse", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organisation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pointage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_scan", models.DateTimeField()),
                (
                    "periode",
                    models.CharField(
                        choices=[("matin", "Matin"), ("apres_midi", "Après-midi")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "type_pointage",
                    models.CharField(
                        choices=[("ENTREE", "Entrée"), ("SORTIE", "Sortie")],
                        max_length=10,
                    ),
                ),
                ("retard", models.IntegerField(default=0)),
                ("depart_anticip", models.IntegerField(default=0)),
                ("commentaire", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organisation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "planning",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.planning",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.site"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="planning",
            name="site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.site"
            ),
        ),
        migrations.CreateModel(
            name="Anomalie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                (
                    "type_anomalie",
                    models.CharField(
                        choices=[
                            ("retard", "Retard"),
                            ("depart_anticipe", "Départ anticipé"),
                            ("absence", "Absence"),
                            ("autre", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                ("motif", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("en_attente", "En attente"),
                            ("justifiee", "Justifiée"),
                            ("non_justifiee", "Non justifiée"),
                        ],
                        default="en_attente",
                        max_length=20,
                    ),
                ),
                (
                    "justificatif",
                    models.FileField(blank=True, null=True, upload_to="justificatifs/"),
                ),
                ("date_traitement", models.DateTimeField(blank=True, null=True)),
                ("commentaire_traitement", models.TextField(blank=True)),
                ("minutes_manquantes", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organisation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "traite_par",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="anomalies_traitees",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.site"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StatistiquesTemps",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mois", models.IntegerField()),
                ("annee", models.IntegerField()),
                ("minutes_travaillees", models.IntegerField(default=0)),
                ("minutes_retard", models.IntegerField(default=0)),
                ("minutes_depart_anticipe", models.IntegerField(default=0)),
                ("minutes_absence", models.IntegerField(default=0)),
                ("jours_travailles", models.IntegerField(default=0)),
                ("date_derniere_maj", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organisation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.site"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
